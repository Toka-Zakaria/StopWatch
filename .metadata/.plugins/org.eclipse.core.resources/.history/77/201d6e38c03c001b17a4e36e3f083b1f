/*
 * external_interrupts.h
 *
 *  Created on: Dec 12, 2020
 *      Author: Toka
 */

#ifndef EXTERNAL_INTERRUPTS_H_
#define EXTERNAL_INTERRUPTS_H_

#include "std_types.h"
#include "micro_config.h"
#include "common_macros.h"

#define INTERNAL_PULL_UP_INT0      0
#define INTERNAL_PULL_UP_INT1      0
#define INTERNAL_PULL_UP_INT2      0

#if (INTERNAL_PULL_UP_INT0 != 0)
{

}/*end of INTERNAL_PULL_UP_INT0  */
#endif


/*INT0 REGISTERS*/

#define MCU_CONTROL_REGISTER                   MCUCR
#define MCU_CONTROL_AND_STATUS_REGISTER        MCUCSR
#define GENERAL_INTERRUPT_CONTROL_REGISTER      GICR
#define GENERAL_INTERRUPT_FLAG_REGISTER         GIFR

#define INTERRUPT_SENSE_CONTROL_0_BIT_0         ISC00
#define INTERRUPT_SENSE_CONTROL_0_BIT_1         ISC01
#define INTERRUPT_SENSE_CONTROL_1_BIT_0         ISC10
#define INTERRUPT_SENSE_CONTROL_1_BIT_1         ISC11
#define INTERRUPT_SENSE_CONTROL_2               ISC2

#define EXTERNAL_INTERRUPT_FLAG_0               INTF0
#define EXTERNAL_INTERRUPT_FLAG_1               INTF1
#define EXTERNAL_INTERRUPT_FLAG_2               INTF2


#define INTERRUPT0_DIRECTION_PORT              DDRD
#define INTERRUPT1_DIRECTION_PORT              DDRD
#define INTERRUPT2_DIRECTION_PORT              DDRB

#define INTERRUPT0_DATA_PORT                   PORTD
#define INTERRUPT1_DATA_PORT                   PORTD
#define INTERRUPT2_DATA_PORT                   PORTB

#define INTERRUPT0_PIN                    PD2
#define INTERRUPT1_PIN                    PD3
#define INTERRUPT2_PIN                    PB2




typedef enum
{

INTERRUPT0, INTERRUPT1, INTERRUPT2

}Interrupt_ID;


typedef enum
{

Low_level, Any_logical ,Raising, Failing

}Interrupt_Control;

typedef struct
{
	Interrupt_ID  INT_ID;
	Interrupt_Control INT_control;

}External_Interrupt_ConfigType;


#endif /* EXTERNAL_INTERRUPTS_H_ */

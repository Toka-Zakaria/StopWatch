/*
 * extrnal_interrupts.c
 *
 *  Created on: Dec 12, 2020
 *      Author: Toka
 */

#include"external_interrupts.h"

void External_Interrupt(External_Interrupt_ConfigType* Config_Ptr)
{

	switch(Config_Ptr->INT_ID)
	{

	case INTERRUPT0:

		INTERRUPT0_DIRECTION_PORT = CLEAR_BIT(INTERRUPT0_DIRECTION_PORT, INTERRUPT0_PIN);

#if (INTERNAL_PULL_UP_INT0 != 0)
		{

			/*Activate internal pull up for interrupt 0*/
			INTERRUPT0_DATA_PORT = SET_BIT(INTERRUPT0_DATA_PORT, INTERRUPT0_PIN);

		}/*end of INTERNAL_PULL_UP_INT0  */
#endif


		MCU_CONTROL_REGISTER = (MCU_CONTROL_REGISTER & 0XFC) | (Config_Ptr->INT_control) ;
		GENERAL_INTERRUPT_CONTROL_REGISTER = (GENERAL_INTERRUPT_CONTROL_REGISTER & 0XBF) | (1<<INT0);

		break;

	case INTERRUPT1:

		INTERRUPT1_DIRECTION_PORT = CLEAR_BIT(INTERRUPT1_DIRECTION_PORT, INTERRUPT1_PIN);

#if (INTERNAL_PULL_UP_INT1 != 0)
		{

			/*Activate internal pull up for interrupt 0*/
			INTERRUPT0_DATA_PORT = SET_BIT(INTERRUPT1_DATA_PORT, INTERRUPT1_PIN);

		}/*end of INTERNAL_PULL_UP_INT0  */
#endif


		MCU_CONTROL_REGISTER = (MCU_CONTROL_REGISTER & 0XF3) | (Config_Ptr->INT_control);
		GENERAL_INTERRUPT_CONTROL_REGISTER = (GENERAL_INTERRUPT_CONTROL_REGISTER & 0XBF) | (1<<INT0);


		break;

	case INTERRUPT2:
		break;




	}/*end of switch case*/


}/*end of External_Interrupt function*/
